#
# Common part 
#
---
apiVersion: v1
kind: Namespace
metadata:
  name: es-cl-04
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: confmap
  namespace: es-cl-04
data:
# elasticsearch cluster name variable
  clustername: es-cl-04
# elasticsearch initial masters node.name
  cluster_initial_master_nodes: "es-master-0, es-master-1, es-master-2"

---
apiVersion: v1
kind: Service
metadata:
  name: masters-cluster-ip
  namespace: es-cl-04
  labels:
    app.name: elastic
spec:
  selector:
    app.name: elastic
  ports:
  - protocol: TCP
    port: 9200
    targetPort: 9200
    name: http-elastic-client
#
# master nodes 
#
---
apiVersion: v1
kind: Service
metadata:
  name: masters-headless
  namespace: es-cl-04
  labels:
    app.name: elastic
    app.pods-role: masters
spec:
  clusterIP: None
  selector:
    app.name: elastic
    app.pods-role: masters
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: es-master
  namespace: es-cl-04
spec:
  serviceName: masters-headless
  replicas: 3
  selector:
    matchLabels:
      app.name: elastic
      app.pods-role: masters
  template:
    metadata:
      labels:
        app.name: elastic
        app.pods-role: masters
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.pods-role
                operator: In
                values:
                - masters
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:7.7.1
        imagePullPolicy: IfNotPresent
        resources:
            limits:
              cpu: 2000m
              memory: 3096Mi
            requests:
              cpu: 300m
              memory: 340Mi
        ports:
        - containerPort: 9200
          name: rest
          protocol: TCP
        - containerPort: 9300
          name: inter-node
          protocol: TCP
        volumeMounts:
        - name: pvc
          mountPath: /usr/share/elasticsearch/data
        env:
          - name: cluster.name
            valueFrom:
              configMapKeyRef:
                name: confmap
                key: clustername
          - name: node.name
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: "cluster.initial_master_nodes"
            valueFrom:
              configMapKeyRef:
                name: confmap
                key: cluster_initial_master_nodes
          - name: "discovery.seed_hosts"
            value: "masters-headless"
          - name: "node.master"
            value: "true"
          - name: "node.voting_only"
            value: "false"
          - name: "node.data"
            value: "false"
          - name: "node.ingest"
            value: "false"
          - name: "node.ml"
            value: "false"
          - name: "cluster.routing.allocation.awareness.attributes"
            value: "rack_id"
          - name: ES_JAVA_OPTS
            value: "-Xms2000m -Xmx2000m"
      initContainers:
      - name: fix-permissions
        image: busybox
        imagePullPolicy: IfNotPresent
        resources:
            limits:
              cpu: 200m
              memory: 100M
            requests:
              cpu: 100m
              memory: 50M
        command: ["sh", "-c", "chown -R 1000:1000 /usr/share/elasticsearch/data"]
        securityContext:
          privileged: true
        volumeMounts:
        - name: pvc
          mountPath: /usr/share/elasticsearch/data
      - name: increase-vm-max-map
        image: busybox
        imagePullPolicy: IfNotPresent
        resources:
            limits:
              cpu: 200m
              memory: 100M
            requests:
              cpu: 100m
              memory: 50M
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
  volumeClaimTemplates:
  - metadata:
      name: pvc
      labels:
        app.name: elastic
        app.pods-role: masters
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: pv-localdisks-100m
      resources:
        requests:
          storage: 90Mi



#
# data nodes
# 
# 1-st SS
#
---
apiVersion: v1
kind: Service
metadata:
  name: data-headless
  namespace: es-cl-04
  labels:
    app.name: elastic
    app.pods-role: data
spec:
  clusterIP: None
  selector:
    app.name: elastic
    app.pods-role: data
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: es-data
  namespace: es-cl-04
spec:
  serviceName: data-headless
  replicas: 5
  selector:
    matchLabels:
      app.name: elastic
      app.pods-role: data
  template:
    metadata:
      labels:
        app.name: elastic
        app.pods-role: data
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.pods-role
                  operator: In
                  values:
                  - data
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:7.7.1
        imagePullPolicy: IfNotPresent
        resources:
            limits:
              cpu: 2000m
              memory: 3500Mi
            requests:
              cpu: 300m
              memory: 340Mi
        ports:
        - containerPort: 9200
          name: rest
          protocol: TCP
        - containerPort: 9300
          name: inter-node
          protocol: TCP
        volumeMounts:
        - name: pvc
          mountPath: /usr/share/elasticsearch/data
        - name: pvc2
          mountPath: /usr/share/elasticsearch/data2
        env:
          - name: cluster.name
            valueFrom:
              configMapKeyRef:
                name: confmap
                key: clustername
          - name: node.name
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: "discovery.seed_hosts"
            value: "masters-headless"
          - name: "node.master"
            value: "false"
          - name: "node.voting_only"
            value: "false"
          - name: "node.data"
            value: "true"
          - name: "node.ingest"
            value: "true"
          - name: "node.ml"
            value: "false"
          - name: node.attr.rack_id
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: ES_JAVA_OPTS
            value: "-Xms3000m -Xmx3000m"
 
          - name: path.data 
            value: "/usr/share/elasticsearch/data,/usr/share/elasticsearch/data2"
 
      initContainers:
      - name: fix-permissions
        image: busybox
        imagePullPolicy: IfNotPresent
        resources:
            limits:
              cpu: 200m
              memory: 100M
            requests:
              cpu: 100m
              memory: 50M
        command: ["sh", "-c", "chown -R 1000:1000 /usr/share/elasticsearch/data; mkdir -p /usr/share/elasticsearch/data2 && chown -R 1000:1000 /usr/share/elasticsearch/data2 "]
        securityContext:
          privileged: true

        volumeMounts:
        - name: pvc
          mountPath: /usr/share/elasticsearch/data
        - name: pvc2
          mountPath: /usr/share/elasticsearch/data2

      - name: increase-vm-max-map
        image: busybox
        imagePullPolicy: IfNotPresent
        resources:
            limits:
              cpu: 200m
              memory: 100M
            requests:
              cpu: 100m
              memory: 50M
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
  volumeClaimTemplates:
  - metadata:
      name: pvc
      labels:
        app.name: elastic
        app.pods-role: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: pv-localdisks-1g
      resources:
        requests:
          storage: 970Mi

  - metadata:
      name: pvc2
      labels:
        app.name: elastic
        app.pods-role: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: pv-localdisks-2g
      resources:
        requests:
          storage: 1940Mi




#
# data nodes
#
# 2-nd SS
#
#
---
apiVersion: v1
kind: Service
metadata:
  name: data-headless
  namespace: es-cl-04
  labels:
    app.name: elastic
    app.pods-role: data2
spec:
  clusterIP: None
  selector:
    app.name: elastic
    app.pods-role: data2
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: es-data2
  namespace: es-cl-04
spec:
  serviceName: data2-headless
  replicas: 4
  selector:
    matchLabels:
      app.name: elastic
      app.pods-role: data2
  template:
    metadata:
      labels:
        app.name: elastic
        app.pods-role: data2
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.pods-role
                  operator: In
                  values:
                  - data2
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:7.7.1
        imagePullPolicy: IfNotPresent
        resources:
            limits:
              cpu: 2000m
              memory: 3500Mi
            requests:
              cpu: 300m
              memory: 340Mi
        ports:
        - containerPort: 9200
          name: rest
          protocol: TCP
        - containerPort: 9300
          name: inter-node
          protocol: TCP
        volumeMounts:
        - name: pvc
          mountPath: /usr/share/elasticsearch/data
        - name: pvc2
          mountPath: /usr/share/elasticsearch/data2
        env:
          - name: cluster.name
            valueFrom:
              configMapKeyRef:
                name: confmap
                key: clustername
          - name: node.name
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: "discovery.seed_hosts"
            value: "masters-headless"
          - name: "node.master"
            value: "false"
          - name: "node.voting_only"
            value: "false"
          - name: "node.data"
            value: "true"
          - name: "node.ingest"
            value: "true"
          - name: "node.ml"
            value: "false"
          - name: node.attr.rack_id
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: ES_JAVA_OPTS
            value: "-Xms3000m -Xmx3000m"

          - name: path.data
            value: "/usr/share/elasticsearch/data,/usr/share/elasticsearch/data2"

      initContainers:
      - name: fix-permissions
        image: busybox
        imagePullPolicy: IfNotPresent
        resources:
            limits:
              cpu: 200m
              memory: 100M
            requests:
              cpu: 100m
              memory: 50M
        command: ["sh", "-c", "chown -R 1000:1000 /usr/share/elasticsearch/data; mkdir -p /usr/share/elasticsearch/data2 && chown -R 1000:1000 /usr/share/elasticsearch/data2 "]
        securityContext:
          privileged: true

        volumeMounts:
        - name: pvc
          mountPath: /usr/share/elasticsearch/data
        - name: pvc2
          mountPath: /usr/share/elasticsearch/data2

      - name: increase-vm-max-map
        image: busybox
        imagePullPolicy: IfNotPresent
        resources:
            limits:
              cpu: 200m
              memory: 100M
            requests:
              cpu: 100m
              memory: 50M
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
  volumeClaimTemplates:
  - metadata:
      name: pvc
      labels:
        app.name: elastic
        app.pods-role: data2
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: pv-localdisks-1g
      resources:
        requests:
          storage: 970Mi

  - metadata:
      name: pvc2
      labels:
        app.name: elastic
        app.pods-role: data2
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: pv-localdisks-2g
      resources:
        requests:
          storage: 1940Mi










#
# interface nodes
#
---
apiVersion: v1
kind: Service
metadata:
  name: interface
  namespace: es-cl-04
  labels:
    app.name: elastic
    app.pods-role: interface
spec:
  type: NodePort
  selector:
    app.name: elastic
    app.pods-role: interface
  ports:
  - port: 9200
    targetPort: 9200
    protocol: TCP
    name: tcp-elastic-client
    nodePort: 31000
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: es-interface
  namespace: es-cl-04
spec:
  serviceName: interface
  replicas: 3
  selector:
    matchLabels:
      app.name: elastic
      app.pods-role: interface
  template:
    metadata:
      labels:
        app.name: elastic
        app.pods-role: interface
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.pods-role
                operator: In
                values:
                - interface
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:7.7.1
        imagePullPolicy: IfNotPresent
        resources:
            limits:
              cpu: 2000m
              memory: 3000Mi
            requests:
              cpu: 300m
              memory: 340Mi
        ports:
        - containerPort: 9200
          name: rest
          protocol: TCP
        - containerPort: 9300
          name: inter-node
          protocol: TCP
        volumeMounts:
        - name: pvc
          mountPath: /usr/share/elasticsearch/data
        env:
          - name: cluster.name
            valueFrom:
              configMapKeyRef:
                name: confmap
                key: clustername
          - name: node.name
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: "discovery.seed_hosts"
            value: "masters-headless"
          - name: "node.master"
            value: "false"
          - name: "node.voting_only"
            value: "false"
          - name: "node.data"
            value: "false"
          - name: "node.ingest"
            value: "false"
          - name: "node.ml"
            value: "false"
          - name: ES_JAVA_OPTS
            value: "-Xms2000m -Xmx2000m"
      initContainers:
      - name: fix-permissions
        image: busybox
        imagePullPolicy: IfNotPresent
        resources:
            limits:
              cpu: 200m
              memory: 100M
            requests:
              cpu: 100m
              memory: 50M
        command: ["sh", "-c", "chown -R 1000:1000 /usr/share/elasticsearch/data"]
        securityContext:
          privileged: true
        volumeMounts:
        - name: pvc
          mountPath: /usr/share/elasticsearch/data
      - name: increase-vm-max-map
        image: busybox
        imagePullPolicy: IfNotPresent
        resources:
            limits:
              cpu: 200m
              memory: 100M
            requests:
              cpu: 100m
              memory: 50M
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
  volumeClaimTemplates:
  - metadata:
      name: pvc
      labels:
        app.name: elastic
        app.pods-role: interface
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: pv-localdisks-1g
      resources:
        requests:
          storage: 900Mi
